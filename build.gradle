plugins {
  id 'java'
  id 'idea'
  id 'eclipse'
  id 'net.minecrell.licenser' version '0.3'
  id 'com.github.johnrengelman.shadow' version '2.0.4'
}

group = 'com.neolumia'
version = '1.1.1'
description = 'Automatic inventory sorting'

ext {
  url = 'https://neolumia.com/'
  bukkitVersion = '1.12.2-R0.1-SNAPSHOT'
}

if(project.hasProperty('cleanFiles')) {
  jar.archiveName = 'AutomaticInventory.jar'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
  mavenCentral()
  maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
  maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
  maven { url 'https://jitpack.io' }
}

dependencies {
  compileOnly group: 'org.spigotmc', name: 'spigot-api', version: bukkitVersion
  testCompile group: 'org.spigotmc', name: 'spigot-api', version: bukkitVersion

  compile ('com.github.neolumia.configurate:configurate-hocon:4d119aa8558987159bd6276bb9dd979e12a0e822') {
    exclude module: 'guava'
    exclude module: 'checker-qual'
  }
}

task sourceJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives sourceJar
  archives javadocJar
}

processResources {
  expand(version: project.version, description: project.description)
  from 'LICENSE'
}

license {
  header = file('HEADER.txt')
  include '**/*.java'
  newLine = true
}

shadowJar {
  relocate 'ninja.leaping.configurate', 'com.neolumia.autoinventory.lib.configurate'
  relocate 'com.typesafe.config', 'com.neolumia.autoinventory.lib.config'
}

build.dependsOn(shadowJar)

task wrapper(type: Wrapper) {
  gradleVersion = '4.10'
}

apply from: 'gradle/publish.gradle'
